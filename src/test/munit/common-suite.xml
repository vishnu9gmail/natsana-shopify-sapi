<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="common-suite.xml" />
	<flow name="mock-http:request" doc:id="376b6560-b8bd-442a-b255-e84fe71ef764" >
		<try doc:name="Try" doc:id="f20a2d0d-8ade-4855-bfb6-cdaed7fff1a4" >
			<munit-tools:retrieve doc:name="Retrieve" doc:id="fe5236b8-ac65-44a5-a655-a311553579f6" key="Mock Call to shopify"/>
			<error-handler >
				<on-error-continue enableNotifications="false" logException="false" doc:name="On Error Continue" doc:id="21eab61c-9934-4886-a75f-1af9edd8e573" type="ANY">
					<set-payload value="#[1]" doc:name="Set Payload" doc:id="f7c2748f-6f3b-4190-a60d-e5ab4577ae6a" />
				</on-error-continue>
			</error-handler>
		</try>
		<munit-tools:store doc:name="Store" doc:id="d36021a8-cdbb-4c54-8ca0-a4b02312806c" key="Mock Call to shopify">
			<munit-tools:value ><![CDATA[#[payload + 1]]]></munit-tools:value>
		</munit-tools:store>
		<choice doc:name="Choice" doc:id="bb27cf09-98d7-4bd3-abdf-af16d0ae9837" >
			<when expression="#[payload == 1]">
				<munit:set-event doc:name="Set Event" doc:id="1c537722-ff14-4caf-80ba-bee2a994e148" >
					<munit:payload value="#[output application/json  --- readUrl('classpath://shopifysapicommonsubflowtest\mock_payload.dwl')]" encoding="UTF-8" mediaType="application/json " />
					<munit:attributes value="#[readUrl('classpath://shopifysapicommonsubflowtest\mock_attributes.dwl')]" />
					<munit:variables >
						<munit:variable key="outboundHeaders" value="#[readUrl('classpath://shopifysapicommonsubflowtest\mock_variable_.dwl')]" />
						<munit:variable key="targetApiParams" value="#[output application/java --- readUrl('classpath://shopifysapicommonsubflowtest\mock_variable_1.dwl')]" encoding="UTF-8" mediaType="application/java" />
						<munit:variable key="info" value="#[output application/json --- readUrl('classpath://shopifysapicommonsubflowtest\mock_variable_2.dwl')]" encoding="UTF-8" mediaType="application/json" />
					</munit:variables>
				</munit:set-event>
			</when>
			<when expression="#[payload == 2]">
				<munit:set-event doc:name="Set Event" doc:id="14894b48-ef41-41fc-9830-a3ebb461203e" >
					<munit:payload value="#[output application/json  --- readUrl('classpath://shopifysapicommonsubflowtest\mock_payload1.dwl')]" encoding="UTF-8" mediaType="application/json " />
					<munit:attributes value="#[readUrl('classpath://shopifysapicommonsubflowtest\mock_attributes1.dwl')]" />
					<munit:variables >
						<munit:variable key="outboundHeaders" value="#[readUrl('classpath://shopifysapicommonsubflowtest\mock_variable_3.dwl')]" />
						<munit:variable key="targetApiParams" value="#[output application/java --- readUrl('classpath://shopifysapicommonsubflowtest\mock_variable_4.dwl')]" encoding="UTF-8" mediaType="application/java" />
						<munit:variable key="info" value="#[output application/json --- readUrl('classpath://shopifysapicommonsubflowtest\mock_variable_5.dwl')]" encoding="UTF-8" mediaType="application/json" />
					</munit:variables>
				</munit:set-event>
			</when>
			<otherwise >
				<munit-tools:fail doc:name="Fail" doc:id="2bd45f27-c17f-4b0c-8b87-aa658889cc0b" message="There are no more events to mock"/>
			</otherwise>
		</choice>
	</flow>
	<munit:test name="shopify-sapi-common-sub-flow-test" doc:id="51baf9d0-c659-4709-a239-ace7d60e35f7" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Call to shopify" doc:id="15e71aeb-96c0-4592-a312-a3b4a8aa82d3" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="d26d4cbb-f3ee-4651-87a6-a9323d0ac4d7" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-call flow="mock-http:request" />
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="0cdaae1e-ac9a-4366-8973-bead261fb995" >
				<munit:payload value="#[readUrl('classpath://shopifysapicommonsubflowtest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://shopifysapicommonsubflowtest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://shopifysapicommonsubflowtest\set-event_variable_.dwl')]" />
					<munit:variable key="targetApiParams" value="#[output application/java --- readUrl('classpath://shopifysapicommonsubflowtest\set-event_variable_1.dwl')]" encoding="UTF-8" mediaType="application/java" />
					<munit:variable key="info" value="#[output application/json --- readUrl('classpath://shopifysapicommonsubflowtest\set-event_variable_2.dwl')]" encoding="UTF-8" mediaType="application/json" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<munit-tools:store doc:name="Store" doc:id="a5099e02-7865-4dd2-85ef-79d1225ba414" key="Mock Call to shopify">
				<munit-tools:value><![CDATA[#[0]]]></munit-tools:value>
			</munit-tools:store>
			<flow-ref doc:name="Flow-ref to shopify-sapi-common-sub-flow" doc:id="dba6ba94-6867-4c9f-9b47-3f939a9f0ff4" name="shopify-sapi-common-sub-flow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="d66f9a56-63fd-4c82-b597-4aae5eef39b7" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import shopifysapicommonsubflowtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>


</mule>
